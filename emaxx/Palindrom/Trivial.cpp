#include <bits/stdc++.h>
using namespace std;
 
int main()
{
    string s;
    cin >> s;
    int n = s.length();
    vector<int> d1 (n),  d2 (n);
    for (int i=0; i<n; ++i) {
        d1[i] = 1; // все нечетные палиндромы длины 1 как минимум 
        while (i-d1[i] >= 0 && i+d1[i] < n && s[i-d1[i]] == s[i+d1[i]]) // проверка чтобы радиус не вышел за границы строки а также сравниваем буквы распол. на одинаковом расстоянии от центра
            ++d1[i]; // увеличиваем радиус
    
        d2[i] = 0; // минимум нули
        while (i-d2[i]-1 >= 0 && i+d2[i] < n && s[i-d2[i]-1] == s[i+d2[i]]) // центр расположен между буквами
            ++d2[i];
    }
    for (int i = 0; i < n; ++i)
    {
        cout << d1[i] << "  " << d2[i] << endl; // выводим все подпалиндромы
    }
    return 0;
}